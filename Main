#include <iostream>
#include <string>
#include <fstream>  
#include <sstream>

using namespace std;

//string EXTENSION = ".txt";
string const TEST = "test.txt";
string const basic = "copy";
int const START = 0;

void copyFromTo(string from, string to){
  char ch;
  ifstream fileIn;
  fileIn.open(from.c_str());
  ofstream fileOut;
  fileOut.open(to.c_str());

  //copies test file to temp file
  while(!fileIn.eof()){
    fileIn.get(ch);
    fileOut<<ch;
  }
  fileIn.close();
  fileOut.close();
}

string nameFile(){
  int version = START;
  bool inUse = true;
  string fileName = basic;

  while(inUse == true){
    ifstream file((fileName).c_str());
    version++;
    //converts int
    ostringstream append;
    if (file.good()){
      append << version;
      fileName = (fileName + append.str()).c_str();
    }
    else {
      inUse = false;
    }
  }
  return fileName;
}

void removeBlanks(){
  int count = START, location;
  string fileName = nameFile(), line, word;
  char ch;

  copyFromTo(TEST, fileName);


  fstream file(fileName.c_str(), ios::in | ios::out);

  while (getline(file, line)){
      std::string word;
      std::istringstream text_stream(line);
      while (text_stream >> word){
        cout << word << ' ';
        file << word << ' ';
      //cin >> word;
      //cin >> ' ';
      }
  }
  // ifstream  src("test.txt");
  // ofstream  dst(fileName.c_str());
  // dst << src.rdbuf();
}

int main() {
  removeBlanks();
  /*instructions require the file to be copied to a new temp file each time before getting rid of extra spaces. Then the temp file must be deleted.
  Currently stuck on removing those extra spaces. Have tried a few different methods.*/
}
