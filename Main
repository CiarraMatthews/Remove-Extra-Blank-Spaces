#include <iostream>
#include <string>
#include <fstream>  
#include <sstream>

using namespace std;

//string EXTENSION = ".txt";
string const TEST = "test.txt";
string const basic = "copy";
int const START = 0;

void removeBlanksFrom(string from, string to){
  char ch;
  string line;
  ifstream fileIn;
  fileIn.open(from.c_str());
  ofstream fileOut;
  fileOut.open(to.c_str());

  //copies while removing extra blanks
  while (getline(fileIn, line)){
      std::string word;
      std::istringstream text_stream(line);
      while (text_stream >> word){
        fileOut << word << ' ';
      }
  }

  fileIn.close();
  fileOut.close();
}

string nameFile(){
  int version = START;
  bool inUse = true;
  string fileName = basic;

  while(inUse == true){
    ifstream file((fileName).c_str());
    version++;
    //converts int
    ostringstream append;
    if (file.good()){
      append << version;
      fileName = (fileName + append.str()).c_str();
    }
    else {
      inUse = false;
    }
  }
  return fileName;
}

void copy(){
  int count = START, location;
  string fileName = nameFile(), line, word;
  char ch;

  removeBlanksFrom(TEST, fileName);

  ifstream  src(fileName.c_str());
  ofstream  dst(TEST.c_str());
  dst << src.rdbuf();

  //delete temp file
  if (remove(fileName.c_str() )!= 0 )
    perror( "Error deleting file" );
  else
    puts( "File successfully deleted" );
}

int main() {
  copy();
  /*instructions require the file to be copied to a new temp file each time before getting rid of extra spaces. Then the temp file must be deleted.
  Currently stuck on removing those extra spaces. Have tried a few different methods.*/
}
